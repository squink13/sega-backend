// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "nextauth_users",
    columns: [
      { name: "email", type: "email" },
      { name: "emailVerified", type: "datetime" },
      { name: "name", type: "string" },
      { name: "image", type: "string" },
    ],
  },
  {
    name: "nextauth_accounts",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "type", type: "string" },
      { name: "provider", type: "string" },
      { name: "providerAccountId", type: "string" },
      { name: "refresh_token", type: "string" },
      { name: "access_token", type: "string" },
      { name: "expires_at", type: "int" },
      { name: "token_type", type: "string" },
      { name: "scope", type: "string" },
      { name: "id_token", type: "text" },
      { name: "session_state", type: "string" },
      { name: "last_logged_in", type: "datetime", defaultValue: "now" },
    ],
  },
  {
    name: "nextauth_users_accounts",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "account", type: "link", link: { table: "nextauth_accounts" } },
    ],
  },
  {
    name: "osu_profile",
    columns: [
      { name: "account", type: "link", link: { table: "nextauth_accounts" } },
      { name: "username", type: "string" },
      { name: "country_code", type: "string" },
      { name: "rank", type: "int" },
      { name: "badges", type: "int" },
      { name: "avatar_url", type: "string" },
    ],
  },
  {
    name: "discord_profile",
    columns: [
      { name: "account", type: "link", link: { table: "nextauth_accounts" } },
      { name: "username", type: "string" },
      { name: "avatar_url", type: "string" },
      { name: "discriminator", type: "int" },
      { name: "avatar", type: "string" },
    ],
  },
  {
    name: "registered",
    columns: [
      { name: "osu", type: "link", link: { table: "osu_profile" } },
      { name: "discord", type: "link", link: { table: "discord_profile" } },
      { name: "tz", type: "int" },
      { name: "title", type: "string" },
      { name: "created_at", type: "datetime", defaultValue: "now" },
      { name: "aim", type: "int" },
      { name: "control", type: "int" },
      { name: "speed", type: "int" },
      { name: "reading", type: "int" },
      { name: "stamina", type: "int" },
      { name: "tech", type: "int" },
    ],
  },
];
/** @type { import('../../client/src').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://squink13-s-workspace-8aisaq.us-east-1.xata.sh/db/gacha-draft",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
